const storesToHandle=["moritz_kemp_news_feed"],CACHE_NAME="ccm-course-app-v1",cacheURLs={"https://akless.github.io/ccm/ccm.min.js":"cacheFailNetwork","https://moritzkemp.github.io/ccm-nav_tabs/resources/ccm.nav_tabs.min.js":"cacheFailNetwork","https://moritzkemp.github.io/ccm-nav_tabs/resources/style.css":"cacheFailNetwork","https://moritzkemp.github.io/ccm-news_feed/resources/ccm.news_feed.min.js":"cacheFailNetwork","https://akless.github.io/ccm-components/user/ccm.user.min.js":"cacheFailNetwork","https://moritzkemp.github.io/ccm-tile/resources/ccm.tile.js":"cacheFailNetwork"};self.addEventListener("fetch",e=>{let t=new URL(e.request.url);switch(cacheURLs[t.href]){case"cacheOnly":e.respondWith(caches.match(e.request));break;case"networkOnly":e.respondWith(fetch(e.request));break;case"cacheFailNetwork":e.respondWith(caches.match(e.request).then(function(t){return t||fetch(e.request)}));break;case"networkFailCache":e.respondWith(fetch(e.request).catch(function(){return caches.match(e.request)}));break;default:e.respondWith(fetch(e.request))}}),self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE_NAME).then(e=>{for(let t in cacheURLs)fetch(t).then(e.add(t))}))}),self.addEventListener("active",e=>{e.waitUntil(caches.keys().then(function(e){return Promise.all(e.map(function(e){if(CACHE_NAME!==e&&e.startsWith("ccm-course-app-"))return caches.delete(e)}))}))}),self.addEventListener("sync",e=>{"add-post"===e.tag&&e.waitUntil(()=>getNewPosts().then(e=>Promise.all(e.map(e=>fetch(getNewsFeedRequest(e)).then(()=>deletePostFromQueue())))))});const getNewPosts=function(){return Promise((e,t)=>{})},getNewsFeedRequest=function(e){return Request("https://ccm.inf.h-brs.de",{body:JSON.stringify(e)})};